{"ast":null,"code":"var _jsxFileName = \"E:\\\\Code\\\\Rememberer\\\\client\\\\src\\\\Game.jsx\";\nimport React, { useState } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  // random number for card\n  let ranNum = () => {\n    let tempNum = Math.floor(Math.random() * 20 + 1);\n  };\n  for (let i = 0; i < 20; i++) {\n    let prevNums = [];\n    if (!prevNums.includes(tempNum)) {\n      prevNums.push(tempNum);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      ranNum: ranNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Card","jsxDEV","_jsxDEV","Game","ranNum","tempNum","Math","floor","random","i","prevNums","includes","push","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Code/Rememberer/client/src/Game.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport Card from './Card'\r\n\r\nexport default function Game() {\r\n  \r\n  \r\n  // random number for card\r\n  let ranNum = () => {\r\n    let tempNum = Math.floor(Math.random() * 20 + 1)\r\n  }\r\n  for(let i = 0; i < 20; i++){\r\n    let prevNums = []\r\n    \r\n    if (!prevNums.includes(tempNum)){\r\n      prevNums.push(tempNum)\r\n    }\r\n    \r\n  }\r\n  \r\n  \r\n  \r\n  return (\r\n    <div>\r\n        <Card ranNum={ranNum}/>\r\n        <Card />\r\n        <Card />\r\n        <Card />\r\n        <Card />\r\n        <Card />\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,IAAI,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,IAAIA,CAAA,EAAG;EAG7B;EACA,IAAIC,MAAM,GAAGA,CAAA,KAAM;IACjB,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;EAClD,CAAC;EACD,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAC;IACzB,IAAIC,QAAQ,GAAG,EAAE;IAEjB,IAAI,CAACA,QAAQ,CAACC,QAAQ,CAACN,OAAO,CAAC,EAAC;MAC9BK,QAAQ,CAACE,IAAI,CAACP,OAAO,CAAC;IACxB;EAEF;EAIA,oBACEH,OAAA;IAAAW,QAAA,gBACIX,OAAA,CAACF,IAAI;MAACI,MAAM,EAAEA;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvBf,OAAA,CAACF,IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACRf,OAAA,CAACF,IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACRf,OAAA,CAACF,IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACRf,OAAA,CAACF,IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACRf,OAAA,CAACF,IAAI;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACC,EAAA,GA5BuBf,IAAI;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}